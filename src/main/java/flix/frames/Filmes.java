/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package flix.frames;

import com.formdev.flatlaf.FlatLightLaf;
import flix.enums.Classificacao;
import flix.enums.Filtro;
import flix.enums.GeneroFilme;

import javax.swing.*;

import java.util.HashMap;

import static flix.Main.usuario;
import static flix.enums.Filtro.*;
import static flix.enums.Filtro.KID;
import static flix.util.DbManager.getIdFrom;
import static flix.util.Manager.*;

/**
 *
 * @author Gago3
 */
public class Filmes extends javax.swing.JFrame {

    /**
     * Creates new form Catalogo
     */
    public Filmes() {
        super("(Usuário: " + usuario.getNome() + " ) MyImagePro - Catálogo de filmes");
        FlatLightLaf.setup();
        initComponents();
        filmesT.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sairB = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        filmesT = new javax.swing.JTable();
        generoCB = new javax.swing.JComboBox<>();
        userCB = new javax.swing.JComboBox<>();
        anoCB = new javax.swing.JComboBox<>();
        classificacaoCB = new javax.swing.JComboBox<>();
        kidC = new javax.swing.JCheckBox();
        nomeF = new javax.swing.JTextField();
        filtrarB = new javax.swing.JButton();
        limparB = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(icon(this.getClass()));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sairB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/others/icon2.png"))); // NOI18N
        sairB.setBorder(null);
        sairB.setBorderPainted(false);
        sairB.setContentAreaFilled(false);
        sairB.setOpaque(false);
        sairB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairBActionPerformed(evt);
            }
        });
        getContentPane().add(sairB, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 530, -1, -1));

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        filmesT.setModel(new javax.swing.table.DefaultTableModel(
            getFilmes(null),
            new String [] {
                "Nome", "Sinopse", "Ano", "Nota IMDB", "Nota público", "Gênero", "Subgênero", "Classificação", "Infantil", "Adicionado por"
            }
        ));
        filmesT.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        filmesT.setFocusable(false);
        filmesT.setOpaque(false);
        filmesT.setRowSelectionAllowed(false);
        filmesT.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(filmesT);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 830, 540));

        generoCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gênero", "Ação", "Comédia", "Romance", "Suspense", "Terror" }));
        generoCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generoCBActionPerformed(evt);
            }
        });
        jPanel2.add(generoCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 70, -1, -1));

        userCB.setModel(new javax.swing.DefaultComboBoxModel<>(users()));
        userCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userCBActionPerformed(evt);
            }
        });
        jPanel2.add(userCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 170, -1));

        anoCB.setModel(new javax.swing.DefaultComboBoxModel<>(anos()));
        anoCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anoCBActionPerformed(evt);
            }
        });
        jPanel2.add(anoCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, 70, -1));

        classificacaoCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Livre", "10+", "12+", "14+", "16+", "18+" }));
        classificacaoCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classificacaoCBActionPerformed(evt);
            }
        });
        jPanel2.add(classificacaoCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 70, -1, -1));

        kidC.setForeground(new java.awt.Color(255, 0, 0));
        kidC.setBorder(null);
        kidC.setContentAreaFilled(false);
        kidC.setFocusPainted(false);
        kidC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kidCActionPerformed(evt);
            }
        });
        jPanel2.add(kidC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 20, 20));

        nomeF.setBorder(null);
        nomeF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeFActionPerformed(evt);
            }
        });
        jPanel2.add(nomeF, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 210, 30));

        filtrarB.setBorder(null);
        filtrarB.setBorderPainted(false);
        filtrarB.setContentAreaFilled(false);
        filtrarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarBActionPerformed(evt);
            }
        });
        jPanel2.add(filtrarB, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 60, 80, 40));

        limparB.setBorder(null);
        limparB.setBorderPainted(false);
        limparB.setContentAreaFilled(false);
        limparB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparBActionPerformed(evt);
            }
        });
        jPanel2.add(limparB, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 0, 80, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 830, 650));

        background.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/bbb2 filmes.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sairBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairBActionPerformed
        dispose();
        if (usuario.getNome().equals("admin"))
            new MenuAdm().setVisible(true);
        else new Menu().setVisible(true);
    }//GEN-LAST:event_sairBActionPerformed

    private void filtrarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarBActionPerformed
        filtro();
    }//GEN-LAST:event_filtrarBActionPerformed

    private void limparBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparBActionPerformed
        nomeF.setText("");
        userCB.setSelectedItem(userCB.getItemAt(0));
        anoCB.setSelectedItem(anoCB.getItemAt(0));
        generoCB.setSelectedItem(generoCB.getItemAt(0));
        classificacaoCB.setSelectedItem(classificacaoCB.getItemAt(0));
        kidC.setSelected(false);
    }//GEN-LAST:event_limparBActionPerformed

    private void userCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userCBActionPerformed
        filtro();
    }//GEN-LAST:event_userCBActionPerformed

    private void anoCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anoCBActionPerformed
        filtro();
    }//GEN-LAST:event_anoCBActionPerformed

    private void generoCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generoCBActionPerformed
        filtro();
    }//GEN-LAST:event_generoCBActionPerformed

    private void classificacaoCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classificacaoCBActionPerformed
        filtro();
    }//GEN-LAST:event_classificacaoCBActionPerformed

    private void kidCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kidCActionPerformed
        filtro();
    }//GEN-LAST:event_kidCActionPerformed

    private void nomeFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeFActionPerformed
        filtro();
    }//GEN-LAST:event_nomeFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Filmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Filmes().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> anoCB;
    private javax.swing.JLabel background;
    private javax.swing.JComboBox<String> classificacaoCB;
    private javax.swing.JTable filmesT;
    private javax.swing.JButton filtrarB;
    private javax.swing.JComboBox<String> generoCB;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox kidC;
    private javax.swing.JButton limparB;
    private javax.swing.JTextField nomeF;
    private javax.swing.JButton sairB;
    private javax.swing.JComboBox<String> userCB;
    // End of variables declaration//GEN-END:variables
    public void filtro() {
        HashMap<Filtro, String> ob = new HashMap<>();
        if (!nomeF.getText().equals(""))
            ob.put(NOME, nomeF.getText());
        if (!userCB.getSelectedItem().toString().equals("Selecione o usuário"))
            ob.put(USERID, String.valueOf(getIdFrom(userCB.getSelectedItem().toString())));
        if (!anoCB.getSelectedItem().toString().equals("Ano"))
            ob.put(ANO, anoCB.getSelectedItem().toString());
        if (!generoCB.getSelectedItem().toString().equals("Gênero")) {
            GeneroFilme g = (GeneroFilme) getE(generoCB.getSelectedItem().toString());
            ob.put(GENERO, String.valueOf(g.id()));
        }
        if (!classificacaoCB.getSelectedItem().toString().equals("Todos")) {
            Classificacao c = (Classificacao) getE(classificacaoCB.getSelectedItem().toString());
            ob.put(CLASSIFICACAO, String.valueOf(c.id()-1));
        }
        if (kidC.isSelected())
            ob.put(KID, "true");
        if (ob.isEmpty()) filmesT.setModel(new javax.swing.table.DefaultTableModel(
                getFilmes(null),
                new String[]{
                        "Nome", "Sinopse", "Ano", "Nota IMDB", "Nota público", "Gênero", "Subgênero", "Classificação", "Infantil", "Adicionado por"
                }
        ));
        else filmesT.setModel(new javax.swing.table.DefaultTableModel(
                getFilmes(ob),
                new String[]{
                        "Nome", "Sinopse", "Ano", "Nota IMDB", "Nota público", "Gênero", "Subgênero", "Classificação", "Infantil", "Adicionado por"
                }
        ));
    }
}
