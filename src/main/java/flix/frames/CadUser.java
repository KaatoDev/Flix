/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package flix.frames;

import com.formdev.flatlaf.FlatLightLaf;
import flix.enums.Genero;
import flix.enums.GeneroFilme;
import flix.model.Usuario;

import javax.swing.*;
import java.awt.event.ItemEvent;
import java.time.LocalDate;

import static flix.Main.usuario;
import static flix.util.DbManager.cadUsuario;
import static flix.util.DbManager.genUsuarios;
import static flix.util.Manager.*;

/**
 *
 * @author Gago3
 */
public class CadUser extends javax.swing.JFrame {

    /**
     * Creates new form CadFilme
     */
    public CadUser() {
        super("(Usuário: " + usuario.getNome() + " ) MyImagePro - Cadastro de usuário");
        FlatLightLaf.setup();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nomeF = new javax.swing.JTextField();
        sobrenomeF = new javax.swing.JTextField();
        cpfF = new javax.swing.JTextField();
        emailF = new javax.swing.JTextField();
        senhaF = new javax.swing.JPasswordField();
        nascimentoF = new javax.swing.JFormattedTextField();
        generoCB = new javax.swing.JComboBox<>();
        suspenseR = new javax.swing.JRadioButton();
        comediaR = new javax.swing.JRadioButton();
        terrorR = new javax.swing.JRadioButton();
        romanceR = new javax.swing.JRadioButton();
        acaoR = new javax.swing.JRadioButton();
        cadB = new javax.swing.JButton();
        menu = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusTraversalPolicyProvider(true);
        setIconImage(icon(this.getClass()));
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 400));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nomeF.setBorder(null);
        jPanel1.add(nomeF, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 220, 30));

        sobrenomeF.setBorder(null);
        jPanel1.add(sobrenomeF, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 36, 210, 30));

        cpfF.setBorder(null);
        jPanel1.add(cpfF, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 200, 30));

        emailF.setBorder(null);
        jPanel1.add(emailF, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 440, 30));

        senhaF.setBorder(null);
        jPanel1.add(senhaF, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 210, 30));

        nascimentoF.setBorder(null);
        nascimentoF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        nascimentoF.setToolTipText("dd/MM/yyyy");
        jPanel1.add(nascimentoF, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 276, 180, 20));

        generoCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não-binário", "Masculino", "Feminino" }));
        generoCB.setBorder(null);
        jPanel1.add(generoCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, 123, 30));

        suspenseR.setBorder(null);
        suspenseR.setContentAreaFilled(false);
        suspenseR.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                suspenseRItemStateChanged(evt);
            }
        });
        jPanel1.add(suspenseR, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, -1, -1));

        comediaR.setBorder(null);
        comediaR.setContentAreaFilled(false);
        comediaR.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comediaRItemStateChanged(evt);
            }
        });
        jPanel1.add(comediaR, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, -1, -1));

        terrorR.setBorder(null);
        terrorR.setContentAreaFilled(false);
        terrorR.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                terrorRItemStateChanged(evt);
            }
        });
        jPanel1.add(terrorR, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 320, -1, -1));

        romanceR.setBorder(null);
        romanceR.setContentAreaFilled(false);
        romanceR.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                romanceRItemStateChanged(evt);
            }
        });
        jPanel1.add(romanceR, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 340, -1, -1));

        acaoR.setBorder(null);
        acaoR.setContentAreaFilled(false);
        acaoR.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                acaoRItemStateChanged(evt);
            }
        });
        jPanel1.add(acaoR, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, -1, -1));

        cadB.setBorder(null);
        cadB.setBorderPainted(false);
        cadB.setContentAreaFilled(false);
        cadB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadBActionPerformed(evt);
            }
        });
        jPanel1.add(cadB, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 390, 110, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 540, 440));

        menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/others/icon2.png"))); // NOI18N
        menu.setBorder(null);
        menu.setBorderPainted(false);
        menu.setContentAreaFilled(false);
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });
        getContentPane().add(menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 580, -1, -1));

        background.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/bbb2 caduser.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
        dispose();
        new MenuAdm().setVisible(true);
    }//GEN-LAST:event_menuActionPerformed

    private void acaoRItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_acaoRItemStateChanged
        select(evt, acaoR);
    }//GEN-LAST:event_acaoRItemStateChanged

    private void comediaRItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comediaRItemStateChanged
        select(evt, comediaR);
    }//GEN-LAST:event_comediaRItemStateChanged

    private void romanceRItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_romanceRItemStateChanged
        select(evt, romanceR);
    }//GEN-LAST:event_romanceRItemStateChanged

    private void suspenseRItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_suspenseRItemStateChanged
        select(evt, suspenseR);
    }//GEN-LAST:event_suspenseRItemStateChanged

    private void terrorRItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_terrorRItemStateChanged
        select(evt, terrorR);
    }//GEN-LAST:event_terrorRItemStateChanged

    private void cadBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadBActionPerformed
        cadd();
    }//GEN-LAST:event_cadBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        for (javax.swing.UIManager.LookAndFeelInfo infos : javax.swing.UIManager.getInstalledLookAndFeels())
            System.out.println(infos);
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                System.out.println(info);
                if ("FlatLightLaf".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new CadUser().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton acaoR;
    private javax.swing.JLabel background;
    private javax.swing.JButton cadB;
    private javax.swing.JRadioButton comediaR;
    private javax.swing.JTextField cpfF;
    private javax.swing.JTextField emailF;
    private javax.swing.JComboBox<String> generoCB;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton menu;
    private javax.swing.JFormattedTextField nascimentoF;
    private javax.swing.JTextField nomeF;
    private javax.swing.JRadioButton romanceR;
    private javax.swing.JPasswordField senhaF;
    private javax.swing.JTextField sobrenomeF;
    private javax.swing.JRadioButton suspenseR;
    private javax.swing.JRadioButton terrorR;
    // End of variables declaration//GEN-END:variables
    private GeneroFilme[] selected() {
        JRadioButton[] aa = new JRadioButton[5];
        aa[0] = acaoR;
        aa[1] = comediaR;
        aa[2] = romanceR;
        aa[3] = suspenseR;
        aa[4] = terrorR;
        int i=0;
        for (JRadioButton a : aa)
            if (a.isSelected())
                i++;
        if (i>0 && i<3) {
            GeneroFilme[] s = new GeneroFilme[2];
            int u=0;
            for (JRadioButton a : aa)
                if (a.isSelected()) {
                    if (a.equals(acaoR)) {
                        s[u++] = GeneroFilme.ACAO;
                    } else if (a.equals(comediaR)) {
                        s[u++] = GeneroFilme.COMEDIA;
                    } else if (a.equals(romanceR)) {
                        s[u++] = GeneroFilme.ROMANCE;
                    } else if (a.equals(suspenseR)) {
                        s[u++] = GeneroFilme.SUSPENSE;
                    } else if (a.equals(terrorR)) {
                        s[u++] = GeneroFilme.TERROR;
                    }
                }
            return s;
        }
        return null;
    }
    private boolean isSelected() {
        JRadioButton[] aa = new JRadioButton[5];
        aa[0] = acaoR;
        aa[1] = comediaR;
        aa[2] = romanceR;
        aa[3] = suspenseR;
        aa[4] = terrorR;
        int i=0;
        for (JRadioButton a : aa) {
            if (a.isSelected())
                i++;
            if (i==3) {
                return true;
            }
        }
        return false;
    }
    private void select(ItemEvent evt, JRadioButton aa) {
        if (evt.getStateChange() == ItemEvent.SELECTED)
            if (isSelected()) aa.setSelected(false);
    }
    private void limpar() {
        nomeF.setText("");
        sobrenomeF.setText("");
        cpfF.setText("");
        senhaF.setText("");
        emailF.setText("");
        nascimentoF.setText("");
        generoCB.setSelectedItem(0);
        acaoR.setSelected(false);
        comediaR.setSelected(false);
        romanceR.setSelected(false);
        suspenseR.setSelected(false);
        terrorR.setSelected(false);
    }
    private void cadd() {
        Genero genero = (Genero) getE(generoCB.getSelectedItem().toString());
        System.out.println(generoCB.getSelectedItem().toString());
        String a = nascimentoF.getText();
        GeneroFilme[] q = selected();
        if (nomeF.getText().equals("") || sobrenomeF.getText().equals("") || cpfF.getText().equals("") || new String(senhaF.getPassword()).equals("")
                || emailF.getText().equals("") || nascimentoF.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Há campos não preenchidos!");
            return;
        }
        int dia = Integer.parseInt(a.substring(0, a.indexOf("/"))),
                mes = Integer.parseInt(a.substring(a.indexOf("/")+1, a.lastIndexOf("/"))),
                ano = Integer.parseInt(a.substring(a.lastIndexOf("/")+1));
        if (cpfF.getText().length() != 11 || !cpf(cpfF.getText())) {
            JOptionPane.showMessageDialog(null, "Insira um CPF válido!");
            return;
        } else if (ano < 1900 || ano > 2010) {
            JOptionPane.showMessageDialog(null, "O ano inserido é inválido.");
            return;
        } else if (q == null || q[0] == null) {
            JOptionPane.showMessageDialog(null, "Selecione pelo menos 1 gênero de filme.");
            return;
        } else for (Usuario s : genUsuarios()) if (s.getCpf() == Long.parseLong(cpfF.getText())) {
            JOptionPane.showMessageDialog(null, "CPF já cadastrado.");
            return;
        }
        LocalDate ld = LocalDate.of(ano, mes, dia);
        if (cadUsuario(nomeF.getText(), sobrenomeF.getText(), Long.parseLong(cpfF.getText()), emailF.getText(), new String(senhaF.getPassword()), ld, genero, q[0], q[1])) {
            limpar();
        } else JOptionPane.showMessageDialog(null, "Este usuário já existe!");
    }
}
